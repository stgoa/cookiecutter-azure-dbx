[tool.poetry]
name = "cookiecutter-poetry-azure"
version = "0.1.0"
description = "A Python project template designed for seamless development workflows. Supercharge your projects with automated continuous integration in Azure and effortless Databricks workflow deployment using DBX"
authors = ["Santiago Armstrong <santiagoarmstrong@gmail.com>"]

[tool.poetry.dependencies]
python = ">=3.8.1,<3.10"
cookiecutter = "^1.7.3"


[tool.poetry.dev-dependencies]
pytest = "^7.1.1"
pytest-cookies = "^0.6.1"


[tool.poetry.group.test.dependencies]
coverage ="*"
pytest-cov = "*"
pytest = ">=7.1.3,<8.0.0"
autopep8 = "^2.0.2"
docformatter = "^1.7.5"
pylint = "^2.17.5"
flake8 = "^6.1.0"
mypy = "^1.4.1"
isort = "^5.12.0"
bandit = "^1.7.5"
black = "^23.7.0"
pre-commit = "^3.3.3"
toml = "^0.10.2"



[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.mansonry.api"

[tool.pytest.ini_options]
addopts = "--import-mode=importlib -s -p no:warnings"
log_cli = 1
log_cli_level = "INFO"
log_cli_format = "[pytest][%(asctime)s][%(levelname)s][%(module)s][%(funcName)s] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
log_level = "INFO"
pythonpath = ["."]

[tool.black]
line-length = 88
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | (.*)/migrations
    | dist
    | {{cookiecutter.project_name}}
  )/
)
'''

[tool.coverage.report]
exclude_lines = [
    "if self.debug:",
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]

ignore_errors = true
omit = [
    "tests/*",
    "setup.py",
]

[tool.bandit]
exclude_dirs=['tests']
