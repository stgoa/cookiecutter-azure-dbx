[tool.poetry]
name ="{{cookiecutter.package_name}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.project_short_description}}"
authors = ["{{cookiecutter.author_name}} <{{cookiecutter.author_email}}>"]


[tool.poetry.dependencies]
python = ">=3.9,<3.11"
pysparkpipe = "^0.1.3"
my-private-pkg = {version = "0.2.2", source = "privatefeed"}

[tool.poetry.group.dev.dependencies]
pyspark = "^3.3.1"
delta-spark = "^2.2.0"
scikit-learn = "*"
pandas = "*"
mlflow = "*"

[tool.poetry.group.test.dependencies]
coverage ="*"
pytest-cov = "*"
dbx = "^0.8.7"
pytest = ">=7.1.3,<8.0.0"
autopep8 = "^2.0.2"
docformatter = "^1.7.5"
pylint = "^2.17.5"
flake8 = "^6.1.0"
mypy = "^1.4.1"
isort = "^5.12.0"
bandit = "^1.7.5"
black = "^23.7.0"
pre-commit = "^3.3.3"
toml = "^0.10.2"
yglu = "^1.1.1"

[[tool.poetry.source]]
name = "privatefeed"
url = "https://my-pypi.pkgs.visualstudio.com/_packaging/my-feed/pypi/simple"
secondary = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.mansonry.api"

[tool.poetry.plugins."console_scripts"]
"sample_task" = "{{cookiecutter.package_name}}.tasks.sample_task:entrypoint"

[tool.pytest.ini_options]
addopts = "--import-mode=importlib -s -p no:warnings"
log_cli = 1
log_cli_level = "INFO"
log_cli_format = "[pytest][%(asctime)s][%(levelname)s][%(module)s][%(funcName)s] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
log_level = "INFO"
pythonpath = ["."]

[tool.black]
line-length = 79

[tool.coverage.run]
branch = true
source = [
    "{{cookiecutter.package_name}}"
]

[tool.coverage.report]

exclude_lines = [
    "if self.debug:",
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]

ignore_errors = true
omit = [
    "tests/*",
    "setup.py",
    "dbx_gen_prospector/common.py",
    # this file is autogenerated by dbx
    "{{cookiecutter.package_name}}/common.py"
]
